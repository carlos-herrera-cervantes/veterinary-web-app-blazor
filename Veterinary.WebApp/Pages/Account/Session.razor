@page "/session/profile"
@inject ILocalStorageService localStorage
@inject ILogger<Session> logger
@inject IAvatarService avatarService

<Header></Header>
<div class="row">
    <Nav></Nav>
    <div>
        <ErrorBoundary>
            <ChildContent>
                <h2 class="text-center">Change your avatar</h2>
                <div class="box-2 row-2 small-width">
                    <div>
                        <div class="text-center">
                            <img src="@avatar" alt="avatar" class="medium-uniform-polygon medium-white-border" />
                        </div>
                    </div>
                    <div>
                        <div>
                            <div class="form-file text-center">
                                <InputFile OnChange="@HandleSelected" id="file" class="invisible tiny-width" />
                                <label for="file">@pathImage</label>
                            </div>
                        </div>
                        <div class="text-center @invisible">
                            <svg id="successAnimation" class="@animation" xmlns="http://www.w3.org/2000/svg" width="70" height="70" viewBox="0 0 70 70">
                                <path id="successAnimationResult" fill="#D8D8D8" d="M35,60 C21.1928813,60 10,48.8071187 10,35 C10,21.1928813 21.1928813,10 35,10 C48.8071187,10 60,21.1928813 60,35 C60,48.8071187 48.8071187,60 35,60 Z M23.6332378,33.2260427 L22.3667622,34.7739573 L34.1433655,44.40936 L47.776114,27.6305926 L46.223886,26.3694074 L33.8566345,41.59064 L23.6332378,33.2260427 Z"/>
                                <circle id="successAnimationCircle" cx="35" cy="35" r="24" stroke="#979797" stroke-width="2" stroke-linecap="round" fill="transparent"/>
                                <polyline id="successAnimationCheck" stroke="#979797" stroke-width="2" points="23 34 34 43 47 27" fill="transparent"/>
                            </svg>
                        </div>
                    </div>
                </div>
            </ChildContent>
            <ErrorContent Context="ex">
                <div class="box-error">
                    <p>@ex.Message</p>
                </div>
            </ErrorContent>
        </ErrorBoundary>
    </div>
</div>

@code {
    private string avatar;

    private string invisible = "invisible";

    private string pathImage = "Select an image";

    private string animation = "";

    protected override async Task OnInitializedAsync()
    {
        avatar = await localStorage.GetItemAsync<string>("avatar");
    }

    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        var images = e.GetMultipleFiles();
        
        if (images.Count == 0)
        {
            return;
        }

        using var readStream = images[0].OpenReadStream(images[0].Size);
        var content = new MultipartFormDataContent();
        content.Headers.ContentDisposition = new ContentDispositionHeaderValue("form-data");
        content.Add(new StreamContent(readStream, Convert.ToInt32(images[0].Size)), "image", images[0].Name);

        await avatarService.Upload(content);

        pathImage = images[0].Name;
        invisible = "";
        animation = "animated";
    }
}
